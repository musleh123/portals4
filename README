Portals 4 Reference Implementation
----------------------------------

* About

* Building

Portals utilizes the Autoconf/Automake/Libtool build system.  The
standard GNU configure script ane make system is used to build Portals
4.  To build:

  % autoreconf                   (only once, or when the build system has been updated)
  % ./configure <options>
  % make
  % make check
  % make install

The "make check" step is not strictly necessary, but is a good idea.

Options to configure include:

  --prefix=<DIR>          Install implementation in <DIR>


* Portals 4 Implementation Notes

There is currently 2 transports available: mc and infiniband, which are mutually exclusive, and can be selected with the --with-implementation=ib|mc configure option.

  - mc: to be documented.

  - Infiniband: this transport has multiple options, including not actualling using IB:
      * Infiniband, selected by default, can be disabled with --disable-ib-ib

      * shared memory, not selected by default, can be enabled with
        --enable-ib-shmem. It has the option of using KNEM for the
        large transfer (used if --with-knem=xxxx is present), or to
        use an internal slower shared memory protocol.

      Both Infiniband and shmem can be used at the same time. In that
      case, Portals will use infinband between nodes, and shmem
      intra-node. If only shmem is used, then portals will not run
      between nodes (obviously).

    On top of that, 2 different environments can be generated:

      * the "fat library" which contains all the portals API. Each
        process has its own progress thread which leads to the use of
        too many cores on a machine. This is the default.

      * the Portals Progres Engine (PPE) and the light library. The
        PPE is a daemon that regroups the progress threads (one by
        default) for all the portals process on the host. The portals
        application links to the "light library" which is only a pass
        through between the application and the PPE. Very litlle
        processing is done in the light library; most of it is done
        inside the PPE. This environment is selected with
        --enable-ib-ppe. The XPMEM driver must be present, and so it
        is mutually exclusive with the shmem transport.

    Both the fat and light library are called the same, so only one
    type can exist on a machine at the same time; use LD_LIBRARY_PATH
    and/or LD_PRELOAD to work around.

    Pre-requisites

      * libev-4.0.4 (or similar), available at
        http://software.schmorp.de/pkg/libev.html

      * The KNEM driver from
        http://runtime.bordeaux.inria.fr/knem/. Will be used for
        shared memory if --with-knem=<path> is set. Ensure that
        /dev/knem is readable/writable by the user running the portals
        software.

      * The XPMEM driver from
        https://code.google.com/p/portals4/. Mandatory for the PPE is
        selected, unused otherwise. The current driver has crashing
        issues and doesn't compile on recent kernel versions.

      * The ummunotify driver from
        http://support.systemfabricworks.com/downloads/ummunotify/ummunotify-v2.tar.bz2
        (optional but recommended). Ensure that /dev/ummunotify is
        readable/writable by the user running the portals software.

    Build:
      Note that the paths to mpi may not be necessary or may need to
      be changed depending on your linux distribution.

      * minimal, no shared memory:
          ./configure --with-implementation=ib

      * optimized, with shared memory and KNEM support:
          ./configure --with-implementation=ib --enable-ib-shmem --with-knem=/opt/knem --enable-fast

      * PPE, no IB transport (so local node only):
          ./configure --with-implementation=ib --enable-ib-ppe --disable-ib-ib

      Then type "make".

    Test :
      * Type "make check" in the main directory. This will run a
        series of checks on the local node, with either 1 or 2 ranks.

    Building an RPM:
      * make dist       --> this will create portals-4.0.tar.gz
      * rpmbuild -ta portals-4.0.tar.gz

    Limitations:
      * A program may not open more than one NID in its lifetime.

    Pitfalls:
      * The user cannot pin enough memory. By default linux systems allow about 32KB. Check with "ulimit -l". This is for IB only.

      * IB is not up and running (check with "ibv_devinfo") or the
        default IPoIB interface, ib0, doesn't have an IP address.
